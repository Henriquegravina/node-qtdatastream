{"version":3,"sources":["webpack:///webpack/bootstrap 92eb820babc085d373ce","webpack:///./src/buffer.js","webpack:///./src/transform.js","webpack:///./src/types.js","webpack:///./src/util.js","webpack:///external \"debug\"","webpack:///external \"int64-buffer\"","webpack:///./src/socket.js","webpack:///external \"events\"","webpack:///external \"stream\"","webpack:///./index.js"],"names":["ReadBuffer","buffer","read_offset","length","slice","result","readInt8","readInt16BE","readUInt16BE","readInt32BE","readUInt32BE","toNumber","readDoubleBE","size","types","debuglib","require","loggerr","debug","enabled","ReadTransform","Object","assign","readableObjectMode","writableObjectMode","packet_no","data_state","Infinity","data","recvd","out","ds","getsize","Error","emit","Buffer","concat","QUInt","read","e","parsed","QVariant","push","remaining","encoding","callback","chunkify","i","bufferlist","final_buffer","totallength","WriteTransform","getBuffer","from","toBuffer","totalSizeBuffer","qtype","QClass","obj","subject","qvarianttype","target","Map","undefined","set","Types","INVALID","BOOL","INT","UINT","INT64","UINT64","DOUBLE","CHAR","MAP","LIST","STRING","STRINGLIST","BYTEARRAY","TIME","DATETIME","USERTYPE","SHORT","QInvalid","alloc","_buffer","QBool","buf","writeInt8","Boolean","QShort","writeUInt16BE","QInt","writeInt32BE","writeUInt32BE","QInt64","readInt64BE","QUInt64","readUInt64BE","QDouble","writeDoubleBE","QChar","swap16","stringBuffer","toString","QTime","QByteArray","buflength","arraySize","QString","bufstring","stringSize","QList","bufs","el","listSize","l","Array","QStringList","QDateTime","milliseconds","getTime","getTimezoneOffset","julianday","julianDay","msecondsSinceMidnight","_isUTC","dateAtMidnight","setMilliseconds","QMap","key","value","keys","mapSize","map","QUserType","name","skipname","usertypes","get","compiled","type","quserclassname","quserclass","elt","defineProperty","enumerable","configurable","writable","isArray","createComplexUserType","qclass","createUserType","bname","usertype","isNull","typeofobj","constructor","Date","bufqvarianttype","bufqvariantisnull","str","dateToJulianDay","julianDayToDate","replace","d","year","getFullYear","month","getMonth","day","getDate","a","Math","floor","y","m","jdn","v","j","u","s","n","w","r","B","p","C","f","g","h","D","M","Y","events","transform","logger","QTDSDEBUG","enable","Socket","socket","write_stream","read_stream","on","process","nextTick","setSocket","write","unpipe","removeAllListeners","detachSocket","pipe","EventEmitter","exports","util"],"mappings":"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","file":"qtdatastream.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 92eb820babc085d373ce","/*\n * node-qtdatastream\n * https://github.com/magne4000/node-qtdatastream\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nimport { Int64BE, Uint64BE } from 'int64-buffer';\n\n/**\n * Wraps a buffer with an internal read pointer for sequential reads\n * @param {Buffer} buffer\n */\nexport class ReadBuffer {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.read_offset = 0;\n  }\n\n  remaining() {\n    if (this.read_offset >= this.buffer.length) return null;\n    return this.buffer.slice(this.read_offset);\n  }\n\n  readInt8() {\n    const result = this.buffer.readInt8(this.read_offset);\n    this.read_offset += 1;\n    return result;\n  }\n\n  readInt16BE() {\n    const result = this.buffer.readInt16BE(this.read_offset);\n    this.read_offset += 2;\n    return result;\n  }\n\n  readUInt16BE() {\n    const result = this.buffer.readUInt16BE(this.read_offset);\n    this.read_offset += 2;\n    return result;\n  }\n\n  readInt32BE() {\n    const result = this.buffer.readInt32BE(this.read_offset);\n    this.read_offset += 4;\n    return result;\n  }\n\n  readUInt32BE() {\n    const result = this.buffer.readUInt32BE(this.read_offset);\n    this.read_offset += 4;\n    return result;\n  }\n\n  readInt64BE() {\n    const result = (new Int64BE(this.buffer, this.read_offset)).toNumber();\n    this.read_offset += 8;\n    return result;\n  }\n\n  readUInt64BE() {\n    const result = (new Uint64BE(this.buffer, this.read_offset)).toNumber();\n    this.read_offset += 8;\n    return result;\n  }\n\n  readDoubleBE() {\n    const result = this.buffer.readDoubleBE(this.read_offset);\n    this.read_offset += 8;\n    return result;\n  }\n\n  slice(size) {\n    const result = this.buffer.slice(this.read_offset, this.read_offset + size);\n    this.read_offset += size;\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/buffer.js","/*\n * node-qtdatastream\n * https://github.com/magne4000/node-qtdatastream\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/** @module qtdatastream/transform */\n\nimport { Transform } from 'stream';\n\nimport { ReadBuffer } from './buffer';\nimport * as types from './types';\n\nconst debuglib = require('debug');\nconst loggerr = debuglib('qtdatastream:transform:read');\nconst debug = debuglib.enabled('qtdatastream:*');\n\n/**\n * ReadTransform data event.\n *\n * @event ReadTransform#data\n * @property {*} data JS object or type\n */\n/**\n * WriteTransform data event.\n *\n * @event WriteTransform#data\n * @property {Buffer} buffer Qt Buffer\n */\n\n/**\n * Transform Qt buffers into JS objects\n * @extends stream.Transform\n * @fires ReadTransform#data\n * @example\n * const { ReadTransform } = require('qtdatastream').transform;\n *\n * const reader = new ReadTransform();\n *\n * reader.on('data', (data) => {\n *   // data === 1\n * });\n *\n * // Write a QDataStream\n * reader.write(Buffer.from([ 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01 ]));\n */\nexport class ReadTransform extends Transform {\n  constructor() {\n    super(Object.assign({ readableObjectMode: true, writableObjectMode: false }));\n    this.packet_no = 0;\n    this.data_state = { size: Infinity, data: [], recvd: 0 };\n  }\n\n  static getsize(bufferlist) {\n    // get 4 bytes\n    let final_buffer;\n    if (bufferlist[0] && bufferlist[0].length >= 4) {\n      [ final_buffer ] = bufferlist;\n    } else {\n      let totallength = 0, i = 0;\n      while (totallength < 4 && i < bufferlist.length) {\n        totallength += bufferlist[i++].length;\n      }\n      if (totallength < 4) return Infinity;\n      final_buffer = Buffer.concat(bufferlist.slice(0, i), totallength);\n    }\n    return final_buffer.readUInt32BE();\n  }\n\n  chunkify() {\n    const out = [];\n    while (true) {\n      const ds = this.data_state;\n      if (ds.size === Infinity && ds.recvd >= 4) {\n        ds.size = ReadTransform.getsize(ds.data);\n      }\n      if (ds.size < Infinity && ds.size > 67108864) { // 64MB\n        loggerr('Packets should not exceed 64MB (received %d bytes)', ds.size);\n        throw new Error('oversized packet detected');\n      }\n      this.emit('progress', ds.recvd, ds.size);\n      if (ds.size + 4 > ds.recvd) {\n        if (debug) {\n          loggerr('(%d/%d) Waiting for end of buffer', ds.recvd, ds.size + 4);\n        }\n        return out;\n      }\n      const buffer = new ReadBuffer(Buffer.concat(ds.data, ds.recvd));\n      let size;\n      if (debug) {\n        loggerr('(%d/%d) Received full buffer', ds.recvd, ds.size + 4);\n      }\n      try {\n        size = types.QUInt.read(buffer);\n      } catch (e) {\n        throw new Error('Error while fetching buffer size');\n      }\n      if (debug) {\n        loggerr('buffer size : %d', size);\n      }\n      const parsed = types.QVariant.read(buffer);\n      if (debug) {\n        loggerr('Received result: %O', parsed);\n      }\n      out.push(parsed);\n      const remaining = buffer.remaining();\n      if (remaining !== null) {\n        this.data_state = {\n          data: [ remaining ],\n          recvd: remaining.length,\n          size: Infinity\n        };\n      } else {\n        this.data_state = { size: Infinity, data: [], recvd: 0 };\n        return out;\n      }\n    }\n  }\n\n  _transform(data, encoding, callback) {\n    if (data !== null) {\n      this.data_state.data.push(data);\n      this.data_state.recvd += data.length;\n    }\n    let out;\n    try {\n      out = this.chunkify();\n    } catch (e) {\n      callback(e);\n      return;\n    }\n    for (let i = 0; i < out.length; i++) {\n      this.push(out[i]);\n    }\n    callback();\n  }\n\n  _flush(callback) {\n    if (this.data_state && this.data_state.recvd > 0) {\n      callback('stream ended in the middle of a packet');\n    }\n  }\n}\n\n/**\n * Transform JS types/objects into Qt buffers\n * @extends stream.Transform\n * @fires WriteTransform#data\n * @example\n * const { ReadTransform } = require('qtdatastream').transform;\n *\n * const writer = new WriteTransform();\n *\n * writer.on('data', (data) => {\n *   // data === Buffer <00 00 00 09 00 00 00 03 00 00 00 00 01>\n * });\n *\n * // Write an int\n * writer.write(1);\n */\nexport class WriteTransform extends Transform {\n  constructor() {\n    super(Object.assign({ readableObjectMode: false, writableObjectMode: true }));\n  }\n\n  /**\n   * Get the buffer representation of the object.\n   * It is prefixed by the packet size as defined in Qt framework.\n   * @static\n   * @returns {Buffer} A Qt styled buffer ready to be sent through a socket\n   */\n  static getBuffer(data){\n    const buffer = types.QVariant.from(data).toBuffer();\n        // Calculate size\n    const totalSizeBuffer = types.QUInt.from(buffer.length).toBuffer();\n    return Buffer.concat([ totalSizeBuffer, buffer ]);\n  }\n\n  _transform(data, encoding, callback) {\n    const buffer = WriteTransform.getBuffer(data);\n    callback(null, buffer);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/transform.js","/*\n * node-qtdatastream\n * https://github.com/magne4000/node-qtdatastream\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/** @module qtdatastream/types */\n\nimport { Int64BE, Uint64BE } from 'int64-buffer';\nimport { dateToJulianDay, julianDayToDate, str as bstr } from './util';\n\n/**\n * Abstract class that all Qt types must implement.\n * Subclasses are used to dictate how a value is represented\n * as a Buffer, and vice-versa.\n * @abstract\n * @param {*} obj underlying data that will be used by toBuffer() method\n */\nexport class QClass {\n  constructor(obj) {\n    this.obj = obj;\n  }\n\n  /**\n   * @function from\n   * @memberof module:qtdatastream/types.QClass\n   * @abstract\n   * @static\n   * @param {*} subject\n   * @returns {QClass}\n   */\n  static from(subject) {\n    if (subject instanceof QClass) {\n      return subject;\n    }\n    return new this(subject);\n  }\n}\n\n/**\n * Decorator that affect QDatastream ID to classes.\n * Used for serialization and deserialization.\n * @example\n * // ES7\n * \\@qtype(Types.QUInt)\n * class QUInt extends QClass {}\n * // ES6\n * class QUInt extends QClass {}\n * qtype(Types.QUInt)(QUInt);\n */\nexport function qtype(qvarianttype) {\n  return function(target) {\n    if (!QClass.types) {\n      QClass.types = new Map;\n    }\n    if (qvarianttype !== undefined) {\n      QClass.types.set(qvarianttype, target);\n    }\n    target.qtype = qvarianttype;\n  };\n}\n\n/**\n * Qt types contants\n * @readonly\n * @enum {number}\n * @name Types\n * @see {@link http://doc.qt.io/qt-4.8/qvariant.html#Type-enum|enum QVariant::Type}\n * @see {@link http://doc.qt.io/qt-4.8/datastreamformat.html|Serializing Qt Data Types}\n */\nexport const Types = {\n  INVALID: 0,\n  BOOL: 1,\n  INT: 2,\n  UINT: 3,\n  INT64: 4,\n  UINT64: 5,\n  DOUBLE: 6,\n  CHAR: 7,\n  MAP: 8,\n  LIST: 9,\n  STRING: 10,\n  STRINGLIST: 11,\n  BYTEARRAY: 12,\n  TIME: 15,\n  DATETIME: 16,\n  USERTYPE: 127,\n  SHORT: 133\n};\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QInvalid extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QInvalid\n   * @static\n   * @param {?Buffer} buffer\n   * @returns {undefined} Always return `undefined`\n   */\n  static read(_buffer) {\n    return undefined;\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QInvalid\n   * @inner\n   * @returns {Buffer} Empty Buffer\n   */\n  toBuffer() {\n    return Buffer.alloc(0);\n  }\n\n  /**\n   * Wraps subject into `QInvalid` object\n   * @function from\n   * @memberof module:qtdatastream/types.QInvalid\n   * @static\n   * @param {*} subject\n   * @returns {QInvalid}\n   */\n}\nqtype(Types.INVALID)(QInvalid);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QBool extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QBool\n   * @static\n   * @param {Buffer} buffer\n   * @returns {boolean} Buffer coerced to boolean\n   */\n  static read(buffer) {\n    return Boolean(buffer.readInt8());\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QBool\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const buf = Buffer.alloc(1);\n    buf.writeInt8(this.obj, 0);\n    return buf;\n  }\n\n  /**\n   * Wraps subject into `QBool` object\n   * @function from\n   * @memberof module:qtdatastream/types.QBool\n   * @static\n   * @param {*} subject\n   * @returns {QBool}\n   */\n}\nqtype(Types.BOOL)(QBool);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QShort extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QShort\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readInt16BE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QShort\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const buf = Buffer.alloc(2);\n    buf.writeUInt16BE(this.obj, 0, true);\n    return buf;\n  }\n\n  /**\n   * Wraps subject into `QShort` object\n   * @function from\n   * @memberof module:qtdatastream/types.QShort\n   * @static\n   * @param {*} subject\n   * @returns {QShort}\n   */\n}\nqtype(Types.SHORT)(QShort);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QInt extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QInt\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readInt32BE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QInt\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const buf = Buffer.alloc(4);\n    buf.writeInt32BE(this.obj, 0, true);\n    return buf;\n  }\n\n  /**\n   * Wraps subject into `QInt` object\n   * @function from\n   * @memberof module:qtdatastream/types.QInt\n   * @static\n   * @param {*} subject\n   * @returns {QInt}\n   */\n}\nqtype(Types.INT)(QInt);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QUInt extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QUInt\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readUInt32BE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QUInt\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const buf = Buffer.alloc(4);\n    buf.writeUInt32BE(this.obj, 0, true);\n    return buf;\n  }\n\n  /**\n   * Wraps subject into `QUInt` object\n   * @function from\n   * @memberof module:qtdatastream/types.QUInt\n   * @static\n   * @param {*} subject\n   * @returns {QUInt}\n   */\n}\nqtype(Types.UINT)(QUInt);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QInt64 extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QInt64\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readInt64BE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QInt64\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    return (new Int64BE(this.obj)).toBuffer();\n  }\n\n  /**\n   * Wraps subject into `QInt64` object\n   * @function from\n   * @memberof module:qtdatastream/types.QInt64\n   * @static\n   * @param {*} subject\n   * @returns {QInt64}\n   */\n}\nqtype(Types.INT64)(QInt64);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QUInt64 extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QUInt64\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readUInt64BE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QUInt64\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    return (new Uint64BE(this.obj)).toBuffer();\n  }\n\n  /**\n   * Wraps subject into `QUInt64` object\n   * @function from\n   * @memberof module:qtdatastream/types.QUInt64\n   * @static\n   * @param {*} subject\n   * @returns {QUInt64}\n   */\n}\nqtype(Types.UINT64)(QUInt64);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QDouble extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QDouble\n   * @static\n   * @param {Buffer} buffer\n   * @returns {number} Buffer coerced to number\n   */\n  static read(buffer) {\n    return buffer.readDoubleBE();\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QDouble\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const buf = Buffer.alloc(8);\n    buf.writeDoubleBE(this.obj, 0, true);\n    return buf;\n  }\n\n  /**\n   * Wraps subject into `QDouble` object\n   * @function from\n   * @memberof module:qtdatastream/types.QDouble\n   * @static\n   * @param {*} subject\n   * @returns {QDouble}\n   */\n}\nqtype(Types.DOUBLE)(QDouble);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QChar extends QClass {\n  constructor(obj){\n    if (typeof obj !== 'string') throw new Error(`${obj} is not a string`);\n    if (obj.length !== 1) throw new Error(`${obj} length must equal 1`);\n    super(obj);\n  }\n\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QChar\n   * @static\n   * @param {Buffer} buffer\n   * @returns {string} Buffer coerced to string\n   */\n  static read(buffer) {\n    const stringBuffer = buffer.slice(2);\n    return stringBuffer.swap16().toString('ucs2');\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QChar\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    return Buffer.from(this.obj, 'ucs2').swap16();\n  }\n\n  /**\n   * Wraps subject into `QChar` object\n   * @function from\n   * @memberof module:qtdatastream/types.QChar\n   * @static\n   * @param {*} subject\n   * @returns {QChar}\n   */\n}\nqtype(Types.CHAR)(QChar);\n\n/**\n * @extends module:qtdatastream/types.QUInt\n * @param {*} obj\n * @see {@link module:qtdatastream/types.QUInt}\n */\nexport class QTime extends QUInt {}\nqtype(Types.TIME)(QTime);\n\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QByteArray extends QClass {\n  /**\n   * Use {@link module:qtdatastream/util.str} to convert the returned Buffer\n   * to a string.\n   * @function read\n   * @memberof module:qtdatastream/types.QByteArray\n   * @static\n   * @param {Buffer} buffer\n   * @returns {Buffer}\n   */\n  static read(buffer) {\n    const arraySize = QUInt.read(buffer);\n    if (arraySize === 0 || arraySize === 0xffffffff) return null;\n\n    return buffer.slice(arraySize);\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QByteArray\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    if (this.obj === null) {\n      return QUInt.from(0xffffffff).toBuffer();\n    }\n    const buf = Buffer.from(this.obj);\n    const buflength = QUInt.from(buf.length).toBuffer();\n    return Buffer.concat([ buflength, buf ]);\n  }\n\n  /**\n   * Wraps subject into `QByteArray` object\n   * @function from\n   * @memberof module:qtdatastream/types.QByteArray\n   * @static\n   * @param {*} subject\n   * @returns {QByteArray}\n   */\n}\nqtype(Types.BYTEARRAY)(QByteArray);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QString extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QString\n   * @static\n   * @param {Buffer} buffer\n   * @returns {string} Buffer coerced to string\n   */\n  static read(buffer) {\n    const stringSize = QUInt.read(buffer);\n    if (stringSize === 0 || stringSize === 0xffffffff) return '';\n\n    const stringBuffer = buffer.slice(stringSize);\n    return stringBuffer.swap16().toString('ucs2');\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QString\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    if (this.obj === null) {\n      return QUInt.from(0xffffffff).toBuffer();\n    }\n    const bufstring = Buffer.from(this.obj, 'ucs2');\n    bufstring.swap16();\n    const buflength = QUInt.from(bufstring.length).toBuffer();\n    return Buffer.concat([ buflength, bufstring ]);\n  }\n\n  /**\n   * Wraps subject into `QString` object\n   * @function from\n   * @memberof module:qtdatastream/types.QString\n   * @static\n   * @param {*} subject\n   * @returns {QString}\n   */\n}\nqtype(Types.STRING)(QString);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QList extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QList\n   * @static\n   * @param {Buffer} buffer\n   * @returns {Array} Buffer coerced to an array\n   */\n  static read(buffer) {\n    const listSize = QUInt.read(buffer), l = Array(listSize);\n    for (let i=0; i<listSize; i++) {\n      l[i] = QVariant.read(buffer);\n    }\n    return l;\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QList\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const bufs = [];\n        // nb of elements in the list\n    bufs.push(QUInt.from(this.obj.length).toBuffer());\n    for (let el of this.obj) {\n            // Values are QVariant\n      bufs.push(QVariant.from(el).toBuffer());\n    }\n    return Buffer.concat(bufs);\n  }\n\n  /**\n   * Wraps subject into `QList` object\n   * @function from\n   * @memberof module:qtdatastream/types.QList\n   * @static\n   * @param {*} subject\n   * @returns {QList}\n   */\n}\nqtype(Types.LIST)(QList);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QStringList extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QStringList\n   * @static\n   * @param {Buffer} buffer\n   * @returns {Array.<string>} Buffer coerced to an array of strings\n   */\n  static read(buffer) {\n    const listSize = QUInt.read(buffer), l = Array(listSize);\n    for (let i=0; i<listSize; i++) {\n      l[i] = QString.read(buffer);\n    }\n    return l;\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QStringList\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const bufs = [];\n        // nb of elements in the list\n    bufs.push(QUInt.from(this.obj.length).toBuffer());\n    for (let el of this.obj) {\n            // Values are QString\n      bufs.push(QString.from(el).toBuffer());\n    }\n    return Buffer.concat(bufs);\n  }\n\n  /**\n   * Wraps subject into `QStringList` object\n   * @function from\n   * @memberof module:qtdatastream/types.QStringList\n   * @static\n   * @param {*} subject\n   * @returns {QStringList}\n   */\n}\nqtype(Types.STRINGLIST)(QStringList);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QDateTime extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QDateTime\n   * @static\n   * @param {Buffer} buffer\n   * @returns {Date} Buffer coerced to a Date\n   */\n  static read(buffer) {\n    const julianDay = QUInt.read(buffer);\n    const msecondsSinceMidnight = QUInt.read(buffer);\n    const _isUTC = QBool.read(buffer);\n    const dateAtMidnight = julianDayToDate(julianDay);\n    dateAtMidnight.setMilliseconds(msecondsSinceMidnight);\n    return dateAtMidnight;\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QDateTime\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const bufs = [];\n    const milliseconds = (this.obj.getTime() - (this.obj.getTimezoneOffset() * 60000)) % 86400000;\n    const julianday = dateToJulianDay(this.obj);\n    bufs.push(QUInt.from(julianday).toBuffer());\n    bufs.push(QUInt.from(milliseconds).toBuffer());\n    bufs.push(QBool.from(this.obj.getTimezoneOffset() === 0).toBuffer());\n    return Buffer.concat(bufs);\n  }\n\n  /**\n   * Wraps subject into `QDateTime` object\n   * @function from\n   * @memberof module:qtdatastream/types.QDateTime\n   * @static\n   * @param {*} subject\n   * @returns {QDateTime}\n   */\n}\nqtype(Types.DATETIME)(QDateTime);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QMap extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QMap\n   * @static\n   * @param {Buffer} buffer\n   * @returns {Object} Buffer coerced to an Object\n   */\n  static read(buffer) {\n    const mapSize = QUInt.read(buffer);\n    let map = {}, key, value;\n    for (let i=0; i<mapSize; i++) {\n      key = QString.read(buffer);\n      value = QVariant.read(buffer);\n      map[key] = value;\n    }\n    return map;\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QMap\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const bufs = [];\n    // keys are all QString\n    // values are all QVariant\n    if (this.obj instanceof Map) {\n      // Map number of elements\n      bufs.push(QUInt.from(this.obj.size).toBuffer());\n      for (let [ key, value ] of this.obj) {\n        // write key\n        bufs.push(QString.from(key).toBuffer());\n        // write value\n        bufs.push(QVariant.from(value).toBuffer());\n      }\n    } else {\n      const keys = Object.keys(this.obj);\n      // Map number of elements\n      bufs.push(QUInt.from(keys.length).toBuffer());\n      for (let key of keys) {\n        // write key\n        bufs.push(QString.from(key).toBuffer());\n        // write value\n        bufs.push(QVariant.from(this.obj[key]).toBuffer());\n      }\n    }\n    return Buffer.concat(bufs);\n  }\n\n  /**\n   * Wraps subject into `QMap` object\n   * @function from\n   * @memberof module:qtdatastream/types.QMap\n   * @static\n   * @param {*} subject\n   * @returns {QMap}\n   */\n}\nqtype(Types.MAP)(QMap);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QUserType extends QClass {\n  constructor(name, obj) {\n    if (!obj) {\n      obj = name;\n      name = undefined;\n    }\n    super(obj);\n    this.name = name;\n  }\n\n  /**\n   * @function createComplexUserType\n   * @memberof module:qtdatastream/types.QUserType\n   * @static\n   * @protected\n   * @param {*} value\n   * @returns {QUserType} a new class that extends QUserType\n   */\n  static createComplexUserType(value) {\n    const compiled = [];\n    let key, keys, type;\n    for (type of value) {\n      [ key ] = Object.keys(type);\n      keys = { key };\n      if (typeof type[key] === 'string') {\n        // It's a QUserType\n        keys.quserclassname = type[key];\n        keys.quserclass = QUserType.usertypes.get(type[key]);\n      } else {\n        keys.quserclass = QClass.types.get(type[key]);\n      }\n      if (!keys.quserclass) {\n        throw new Error(`Type ${type[key]} does not exists`);\n      }\n      compiled.push(keys);\n    }\n\n    return class extends QUserType {\n      static read(buffer) {\n        const obj = {};\n        for (let elt of compiled) {\n          Object.defineProperty(obj, elt.key, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: elt.quserclass.read(buffer, keys.quserclassname)\n          });\n        }\n        return obj;\n      }\n\n      toBuffer() {\n        const bufs = [];\n        for (let elt of compiled) {\n          bufs.push(elt.quserclass.from(this.obj[elt.key]).toBuffer(true));\n        }\n        return Buffer.concat(bufs);\n      }\n    };\n  }\n\n  /**\n   * @function createUserType\n   * @memberof module:qtdatastream/types.QUserType\n   * @static\n   * @protected\n   * @param {*} value\n   * @returns {QUserType} a new class that extends QUserType\n   */\n  static createUserType(value) {\n    if (Array.isArray(value)) {\n      return QUserType.createComplexUserType(value);\n    }\n    const qclass = QClass.types.get(value);\n\n    return class extends QUserType {\n      static read(buffer) {\n        return qclass.read(buffer);\n      }\n\n      toBuffer() {\n        return qclass.from(this.obj).toBuffer();\n      }\n    };\n  }\n\n  /**\n   * Register a custom usertype\n   * @function register\n   * @memberof module:qtdatastream/types.QUserType\n   * @static\n   * @param {string} name\n   * @param {*} value\n   * @example\n   * const { QUserType } = require('qtdatastream').types;\n   * QUserType.register('NWI', types.Types.INT);\n   * QUserType.register('BufferInfo', [\n   *   { type: types.Types.SHORT },\n   *   { name: types.Types.BYTEARRAY },\n   *   { ni1: 'NWI' },\n   *   { ni2: 'NWI' }\n   * ]);\n   */\n  static register(name, value) {\n    if (!QUserType.usertypes) {\n      QUserType.usertypes = new Map;\n    }\n    QUserType.usertypes.set(name, QUserType.createUserType(value));\n  }\n\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QUserType\n   * @static\n   * @param {Buffer} buffer\n   * @param {string} name name with which the usertype has been registered\n   * @returns {*} Buffer coerced to whatever have been registered\n   */\n  static read(buffer, name) {\n    if (!name) {\n      const bname = QByteArray.read(buffer);\n      name = bstr(bname);\n    }\n    const usertype = QUserType.usertypes.get(name);\n    if (!usertype) {\n      throw new Error(`Unregistered usertype ${name}`);\n    }\n    return usertype.read(buffer);\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QUserType\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer(skipname = false) {\n    if (!this.name) {\n      throw new Error('Abstract QUserType cannot be converted to a buffer');\n    }\n    const bufs = [];\n    if (!skipname) {\n      bufs.push(QByteArray.from(this.name).toBuffer());\n    }\n    bufs.push(QUserType.usertypes.get(this.name).from(this.obj).toBuffer());\n    return Buffer.concat(bufs);\n  }\n\n  /**\n   * Wraps subject into `QUserType` object\n   * @function from\n   * @memberof module:qtdatastream/types.QUserType\n   * @static\n   * @param {*} subject\n   * @returns {QUserType}\n   */\n}\nqtype(Types.USERTYPE)(QUserType);\n\n/**\n * @extends module:qtdatastream/types.QClass\n * @param {*} obj\n */\nexport class QVariant extends QClass {\n  /**\n   * @function read\n   * @memberof module:qtdatastream/types.QVariant\n   * @static\n   * @param {Buffer} buffer\n   * @returns {*} Buffer coerced to underlying QVariant type\n   */\n  static read(buffer){\n    const type = QUInt.read(buffer);\n    const isNull = QBool.read(buffer);\n    return isNull ? undefined : QClass.types.get(type).read(buffer);\n  }\n\n  /**\n   * @function toBuffer\n   * @memberof module:qtdatastream/types.QVariant\n   * @inner\n   * @returns {Buffer}\n   */\n  toBuffer() {\n    const isNull = (this.obj === undefined || this.obj === null);\n    const typeofobj = typeof this.obj;\n    let type;\n    if (this.obj === undefined) {\n      type = Types.INVALID;\n    } else if (this.obj instanceof QUserType) {\n      type = Types.USERTYPE;\n    } else if (this.obj instanceof QClass) {\n      type = this.obj.constructor.qtype;\n    } else if (typeofobj === 'string') {\n      type = Types.STRING;\n    } else if (typeofobj === 'number') {\n      type = Types.UINT;\n    } else if (typeofobj === 'boolean') {\n      type = Types.BOOL;\n    } else if (this.obj instanceof Date) {\n      type = Types.DATETIME;\n    } else if (this.obj instanceof Array) {\n      type = Types.LIST;\n    } else {\n      type = Types.MAP;\n    }\n    const qclass = QClass.types.get(type);\n    if (!qclass) {\n      throw new Error(`Undefined type ${type} from QVariant`);\n    }\n    const bufqvarianttype = QUInt.from(type).toBuffer();\n    const bufqvariantisnull = QBool.from(isNull).toBuffer();\n    const bufs = [ bufqvarianttype, bufqvariantisnull ];\n    if (!isNull) {\n      bufs.push(qclass.from(this.obj).toBuffer());\n    }\n    return Buffer.concat(bufs);\n  }\n  \n  /**\n   * Wraps subject into `QVariant` object\n   * @function from\n   * @memberof module:qtdatastream/types.QVariant\n   * @static\n   * @param {*} subject\n   * @returns {QVariant}\n   */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/types.js","/*\n * node-qtdatastream\n * https://github.com/magne4000/node-qtdatastream\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/** @module qtdatastream/util */\n\n/**\n * Apply `toString()` method on Buffer and remove NUL end char\n * @param {Buffer} obj\n * @returns {string}\n */\nexport function str(obj) {\n  const str = obj.toString();\n  return str.replace('\\0', '');\n}\n\n/**\n * Convert a Date object to a Julian day representation\n * @param {Date} d\n * @returns {number}\n */\nexport function dateToJulianDay(d) {\n  const year = d.getFullYear();\n  const month = d.getMonth() + 1;\n  const day = d.getDate();\n  const a = Math.floor((14-month)/12);\n  const y = Math.floor(year+4800-a);\n  const m = month+12*a-3;\n  const jdn = day + Math.floor((153*m+2)/5)+(365*y)+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400)-32045;\n  return jdn;\n}\n\n/**\n * Convert a Julian day representation to a Date object\n * @param {number} i\n * @returns {Date}\n */\nexport function julianDayToDate(i) {\n  const y = 4716;\n  const v = 3;\n  const j = 1401;\n  const u = 5;\n  const m = 2;\n  const s = 153;\n  const n = 12;\n  const w = 2;\n  const r = 4;\n  const B = 274277;\n  const p = 1461;\n  const C = -38;\n  const f = i + j + Math.floor((Math.floor((4 * i + B) / 146097) * 3) / 4) + C;\n  const e = r * f + v;\n  const g = Math.floor((e % p) / r);\n  const h = u * g + w;\n  const D = Math.floor((h % s) / u) + 1;\n  const M = ((Math.floor(h / s) + m) % n) + 1;\n  const Y = Math.floor(e / p) - y + Math.floor((n + m - M) / n);\n  return new Date(Y, M-1, D);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"int64-buffer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"int64-buffer\"\n// module id = 5\n// module chunks = 0","/*\n * node-qtdatastream\n * https://github.com/magne4000/node-qtdatastream\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/** @module qtdatastream/socket */\n\nconst events = require('events');\nconst debuglib = require('debug');\nconst transform = require('./transform');\nconst logger = debuglib('qtdatastream:main');\nlet debug = Boolean(process.env.QTDSDEBUG) || debuglib.enabled('qtdatastream:*');\n\nif (debug && !debuglib.enabled('qtdatastream:*')) {\n  debuglib.enable('qtdatastream:*');\n}\n\n/**\n * Qt compliant Socket overload.\n * `data` event is triggered only when full buffer is parsed.\n * `error`, `close` and `end` event are not altered.\n * @extends events.EventEmitter\n * @param {*} socket Underlying socket\n * @example\n * const { Socket } = require('qtdatastream').socket;\n *\n * // socket can be a net.Socket or a websocket\n * const qtsocket = new Socket(socket);\n * qtsocket.on('read', (data) => {\n *   console.log(data);\n * });\n * qtsocket.write('Hello');\n */\nexport class Socket extends events.EventEmitter {\n\n  constructor(socket) {\n    super();\n    this.socket = socket;\n    this.data_state = null;\n    this.write_stream = new transform.WriteTransform();\n    this.read_stream = new transform.ReadTransform();\n    this.read_stream.on('data', (data) => {\n      process.nextTick(() => this.emit('data', data));\n    });\n\n    if (socket) this.setSocket(socket);\n  }\n\n  /**\n   * Transforms and write data to underlying socket\n   * @function module:qtdatastream/socket.Socket#write\n   * @param {*} data\n   */\n  write(data) {\n    this.write_stream.write(data);\n  }\n\n  /**\n   * Detach underlying socket\n   * @function module:qtdatastream/socket.Socket#detachSocket\n   * @returns {stream.Duplex} underlying socket that has been detached\n   */\n  detachSocket() {\n    if (debug) {\n      logger('removing socket');\n    }\n    const { socket } = this;\n    this.write_stream.unpipe(socket);\n    socket.unpipe(this.read_stream);\n    socket.removeAllListeners();\n    this.socket = null;\n    return socket;\n  }\n\n  /**\n   * Update the socket (for example to promote it to SSL stream)\n   * @function module:qtdatastream/socket.Socket#setSocket\n   * @param {stream.Duplex} socket\n   */\n  setSocket(socket) {\n    if (this.socket !== null) {\n      this.detachSocket();\n    }\n\n    if (debug) {\n      logger('updating socket');\n    }\n\n    this.socket = socket;\n    this.write_stream.pipe(this.socket).pipe(this.read_stream);\n\n    this.socket.on('error', (e) => {\n      if (debug) {\n        logger('ERROR');\n      }\n      this.emit('error', e);\n    });\n\n    this.socket.on('close', () => {\n      if (debug) {\n        logger('Connection closed');\n      }\n      this.emit('close');\n    });\n\n    this.socket.on('end', () => {\n      if (debug) {\n        logger('END');\n      }\n      this.emit('end');\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/socket.js","module.exports = require(\"events\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"events\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"stream\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"stream\"\n// module id = 8\n// module chunks = 0","exports.util = require('./src/util');\nexports.types = require('./src/types');\nexports.buffer = require('./src/buffer');\nexports.socket = require('./src/socket');\nexports.transform = require('./src/transform');\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}